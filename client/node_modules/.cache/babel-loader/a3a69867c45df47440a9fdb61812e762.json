{"ast":null,"code":"var _jsxFileName = \"D:\\\\Major Project Implementation\\\\client\\\\src\\\\pages\\\\updatePassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UpdatePassword({\n  history\n}) {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(false);\n  const [responseError, setResponseError] = useState(\"\");\n\n  const updatePassword = () => {\n    if (newPassword !== confirmPassword) {\n      setPasswordError(true);\n    } else {\n      setPasswordError(false);\n      axios.post(`http://localhost:3001/users/updatePassword/${id}`, {\n        password: newPassword\n      }, {\n        headers: {\n          accessToken: localStorage.getItem(\"accessToken\")\n        }\n      }).then(response => {\n        if (response.data.error) {\n          setResponseError(response.data.error);\n        } else {\n          history.push(\"/faculty\");\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        marginBottom: \"40px\"\n      },\n      children: \"Faculty Information Portal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-danger form-text\",\n      children: responseError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Create New Password:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: newPassword,\n      onChange: event => {\n        setNewPassword(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Confirm Password:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: confirmPassword,\n      onChange: event => {\n        setConfirmPassword(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), passwordError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-danger form-text\",\n      children: \"Password Doesn't Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: updatePassword,\n      children: \" Update Password \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UpdatePassword, \"FIuFRCYNurJXHyF6wkCz09lpcuo=\", false, function () {\n  return [useParams];\n});\n\n_c = UpdatePassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatePassword\");","map":{"version":3,"sources":["D:/Major Project Implementation/client/src/pages/updatePassword.js"],"names":["React","useState","axios","useParams","UpdatePassword","history","id","newPassword","setNewPassword","confirmPassword","setConfirmPassword","passwordError","setPasswordError","responseError","setResponseError","updatePassword","post","password","headers","accessToken","localStorage","getItem","then","response","data","error","push","marginBottom","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;AAEA,eAAe,SAASC,cAAT,CAAwB;AAAEC,EAAAA;AAAF,CAAxB,EAAqC;AAAA;;AAClD,QAAM;AAAEC,IAAAA;AAAF,MAASH,SAAS,EAAxB;AAEA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACQ,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACY,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAC,EAAD,CAAlD;;AAEA,QAAMc,cAAc,GAAG,MAAM;AAC3B,QAAIR,WAAW,KAAKE,eAApB,EAAqC;AACnCG,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,KAFD,MAEO;AACLA,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAV,MAAAA,KAAK,CACFc,IADH,CAEK,8CAA6CV,EAAG,EAFrD,EAGI;AAACW,QAAAA,QAAQ,EAAEV;AAAX,OAHJ,EAKI;AACEW,QAAAA,OAAO,EAAE;AACPC,UAAAA,WAAW,EAAEC,YAAY,CAACC,OAAb,CAAqB,aAArB;AADN;AADX,OALJ,EAWGC,IAXH,CAWSC,QAAD,IAAc;AAClB,YAAIA,QAAQ,CAACC,IAAT,CAAcC,KAAlB,EAAyB;AACvBX,UAAAA,gBAAgB,CAACS,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAAhB;AACD,SAFD,MAEO;AACLpB,UAAAA,OAAO,CAACqB,IAAR,CAAa,UAAb;AACD;AACF,OAjBH;AAkBD;AACF,GAxBD;;AA0BA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE;AAAI,MAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAI,MAAA,SAAS,EAAC,uBAAd;AAAA,gBAAuCd;AAAvC;AAAA;AAAA;AAAA;AAAA,YAHF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,KAAK,EAAEN,WAFT;AAGE,MAAA,QAAQ,EAAGqB,KAAD,IAAW;AACnBpB,QAAAA,cAAc,CAACoB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACD;AALH;AAAA;AAAA;AAAA;AAAA,YANF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,eAcE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,KAAK,EAAErB,eAFT;AAGE,MAAA,QAAQ,EAAGmB,KAAD,IAAW;AACnBlB,QAAAA,kBAAkB,CAACkB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAlB;AACD;AALH;AAAA;AAAA;AAAA;AAAA,YAdF,EAsBGnB,aAAa,iBACZ;AAAG,MAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBJ,eA0BE;AAAQ,MAAA,OAAO,EAAEI,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD;;GAhEuBX,c;UACPD,S;;;KADOC,c","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\n\nexport default function UpdatePassword({ history }) {\n  const { id } = useParams();\n\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(false);\n  const [responseError, setResponseError] = useState(\"\");\n\n  const updatePassword = () => {\n    if (newPassword !== confirmPassword) {\n      setPasswordError(true);\n    } else {\n      setPasswordError(false);\n      axios\n        .post(\n          `http://localhost:3001/users/updatePassword/${id}`,\n          {password: newPassword },\n\n          {\n            headers: {\n              accessToken: localStorage.getItem(\"accessToken\"),\n            },\n          }\n        )\n        .then((response) => {\n          if (response.data.error) {\n            setResponseError(response.data.error);\n          } else {\n            history.push(\"/faculty\");\n          }\n        });\n    }\n  };\n\n  return (\n    <div className=\"loginContainer\">\n      <h1 style={{ marginBottom: \"40px\" }}>Faculty Information Portal</h1>\n\n      <h2 className=\"text-danger form-text\">{responseError}</h2>\n\n      <label>Create New Password:</label>\n      <input\n        type=\"password\"\n        value={newPassword}\n        onChange={(event) => {\n          setNewPassword(event.target.value);\n        }}\n      />\n      <label>Confirm Password:</label>\n      <input\n        type=\"password\"\n        value={confirmPassword}\n        onChange={(event) => {\n          setConfirmPassword(event.target.value);\n        }}\n      />\n\n      {passwordError && (\n        <p className=\"text-danger form-text\">Password Doesn't Match</p>\n      )}\n\n      <button onClick={updatePassword}> Update Password </button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}